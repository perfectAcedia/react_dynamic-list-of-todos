{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","React","memo","todos","modalView","setModalView","length","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","setTodos","useState","All","filter","setFilter","query","setQuery","useEffect","filteredTodos","correctQuery","trim","toLowerCase","includes","getFilteredTodos","value","onChange","event","target","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","setUsers","loading","setLoading","find","userId","finally","href","name","App","setFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d6ef5ec.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\nconst enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\ntype Props = {\n  todos: Todo[],\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>\n};\n\nfunction getFilteredTodos(\n  todos: Todo[],\n  filter: Filter,\n  query: string,\n) {\n  let filteredTodos = [...todos];\n\n  if (filter) {\n    filteredTodos = filteredTodos.filter(todo => {\n      if (filter === 'active') {\n        return !todo.completed;\n      }\n\n      if (filter === 'completed') {\n        return todo.completed;\n      }\n\n      return todo;\n    });\n  }\n\n  if (query) {\n    const correctQuery = query.trim().toLowerCase();\n\n    filteredTodos = filteredTodos.filter(todo => todo.title\n      .toLowerCase().includes(correctQuery));\n  }\n\n  return filteredTodos;\n}\n\nexport const TodoFilter: React.FC<Props> = ({ todos, setTodos }) => {\n  const [filter, setFilter] = useState(Filter.All);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setTodos(getFilteredTodos(todos, filter, query));\n  }, [filter, todos, query]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(event) => setFilter(event.target.value as Filter)}\n          >\n            <option\n              value={Filter.All}\n            >\n              All\n            </option>\n            <option\n              value={Filter.Active}\n            >\n              Active\n            </option>\n            <option\n              value={Filter.Completed}\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query\n            && (\n              /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setQuery('')}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  modalView: number,\n  setModalView: React.Dispatch<React.SetStateAction<number>>,\n};\n\nexport const TodoList: React.FC<Props> = React.memo(\n  ({\n    todos,\n    modalView,\n    setModalView,\n  }) => {\n    if (todos.length === 0) {\n      return null;\n    }\n\n    return (\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n        <tbody>\n          {todos.map(todo => (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed\n                  && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setModalView(todo.id)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames({\n                      'far fa-eye': modalView !== todo.id,\n                      'far fa-eye-slash': modalView === todo.id,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  },\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  filteredTodos: Todo[],\n  modalView: number,\n  setModalView: React.Dispatch<React.SetStateAction<number>>,\n};\n\nfunction findTodoByID(todos: Todo[], id: number) {\n  return todos.find(todo => todo.id === id)\n    || null;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  filteredTodos,\n  modalView,\n  setModalView,\n}) => {\n  const [user, setUsers] = useState<User>();\n  const [loading, setLoading] = useState(true);\n  const todo = findTodoByID(filteredTodos, modalView);\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId)\n        .then(setUsers)\n        .finally(() => setLoading(false));\n    }\n  }, [modalView]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => setModalView(0)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                <strong className={classNames({\n                  'has-text-danger': !todo?.completed,\n                  'has-text-success': todo?.completed,\n                })}\n                >\n                  {todo?.completed\n                    ? 'Done'\n                    : 'Planned'}\n                </strong>\n\n                {' by '}\n\n                <a href=\"mailto:Sincere@april.biz\">\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>(todos);\n  const [modalView, setModalView] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setTodos={setFilteredTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    modalView={modalView}\n                    setModalView={setModalView}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modalView\n        ? (\n          <TodoModal\n            filteredTodos={filteredTodos}\n            modalView={modalView}\n            setModalView={setModalView}\n          />\n        )\n        : null}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}